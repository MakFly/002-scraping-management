// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model ScrapeJob {
  id              Int               @id @default(autoincrement())
  source          String            // The target website (e.g., "ebay", "amazon")
  query           String            // Search query to execute
  pageCount       Int               @default(1)  // Number of pages to scrape (1-10)
  status          String            @default("idle") // idle, running, completed, failed, cancelled
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  history         ScrapeJobHistory[]

  @@index([status])
  @@index([createdAt])
}

model ScrapeJobHistory {
  id           Int        @id @default(autoincrement())
  jobId        Int
  status       String     // running, completed, failed
  startTime    DateTime   @default(now())
  endTime      DateTime?
  itemsScraped Int        @default(0)
  errors       String[]
  logs         String[]   // Store log entries for real-time monitoring
  results      Json?      // Store scraping results as JSON
  job          ScrapeJob  @relation(fields: [jobId], references: [id])
  vehicleAds   VehicleAd[] // Relation avec les annonces de véhicules normalisées

  @@index([jobId])
  @@index([startTime])
  @@index([status])
}

model VehicleAd {
  id          String   @id
  scrapeJobHistoryId Int
  platform    String
  url         String
  externalId  String
  title       String
  description String
  price       Float

  // Location
  city        String
  postalCode  String
  region      String
  department  String
  latitude    Float?
  longitude   Float?

  // Vehicle
  brand       String
  model       String
  version     String
  year        Int
  mileage     Int
  fuel        String
  transmission String
  fiscalPower Int
  dinPower    Int
  color       String
  doors       Int
  seats       Int
  inspectionValidUntil String
  features    String[]
  condition   String

  // Images
  imageUrls   String[]
  thumbnail   String?

  // Seller
  sellerName  String
  sellerType  String
  hasPhone    Boolean

  // Metadata
  publishedAt DateTime
  expiresAt   DateTime
  status      String
  category    String
  lastUpdated DateTime

  // Relations
  scrapeJobHistory ScrapeJobHistory @relation(fields: [scrapeJobHistoryId], references: [id])

  @@index([platform, externalId])
  @@index([brand, model])
  @@index([price])
  @@index([year])
  @@index([mileage])
  @@index([scrapeJobHistoryId])
}